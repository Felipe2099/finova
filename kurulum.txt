# Gelir-Gider Uygulaması Kurulum Rehberi

## Gereksinimler
- PHP 8.2 veya üzeri
- Composer
- MySQL veya MariaDB
- Node.js (18.x veya üzeri önerilir)
- NPM veya Yarnü
## Kurulum Adımları

1. **Composer ile PHP Bağımlılıklarını Kur**
   ```sh
composer install
```

2. **Node.js Bağımlılıklarını Kur**
   ```sh
npm install
# veya
yarn install
```

3. **.env Dosyasını Oluştur ve Düzenle**
   ```sh
cp .env.example .env
```
   Ardından `.env` dosyasını açıp veritabanı, mail, AI API anahtarları ve diğer gerekli ayarları doldurun.

4. **Uygulama Anahtarını Oluştur**
   ```sh
php artisan key:generate
```

5. **Veritabanı Migration ve Seeder Çalıştır**
   ```sh
php artisan migrate --seed
```
   Bu komut veritabanı tablolarını oluşturur ve örnek verileri ekler.

6. **Storage Link Oluştur**
   ```sh
php artisan storage:link
```

7. **Livewire ve Frontend Build Al**
   ```sh
npm run build
# veya
yarn build
```
   Geliştirme ortamı için:
   ```sh
npm run dev
# veya
yarn dev
```

8. **Queue (İsteğe Bağlı)**
   Eğer queue kullanıyorsanız:
   ```sh
php artisan queue:work
```

9. **Sunucu Başlat (Geliştirme için)**
   ```sh
php artisan serve
```

## Notlar
- AI entegrasyonu için `.env` dosyasında gerekli API anahtarlarını (OpenAI, Gemini vs.) doldurmayı unutmayın.
- Uygulama canlıya alınacaksa, `APP_ENV=production` ve `APP_DEBUG=false` olarak ayarlayın.
- Sunucuya deploy sonrası cache temizlemek için:
   ```sh
php artisan config:cache
php artisan route:cache
php artisan view:cache
```
- Gerekiyorsa dosya izinlerini güncelleyin:
   ```sh
chmod -R 775 storage bootstrap/cache
```

---
Herhangi bir sorunla karşılaşırsanız README veya dökümantasyona bakabilir ya da geliştiriciyle iletişime geçebilirsiniz.

## Cron Job Bilgisi
- Bu uygulamanın çalışması için zorunlu bir cron job gerekmemektedir.
- Eğer ileride periyodik görevler eklenirse, aşağıdaki gibi bir cron satırı ekleyebilirsiniz:

```
* * * * * cd /path/to/gelir-gider && php artisan schedule:run >> /dev/null 2>&1
```
